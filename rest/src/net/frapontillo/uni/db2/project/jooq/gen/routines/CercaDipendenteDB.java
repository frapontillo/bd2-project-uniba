/**
 * This class is generated by jOOQ
 */
package net.frapontillo.uni.db2.project.jooq.gen.routines;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.6.2"},
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings("all")
public class CercaDipendenteDB extends org.jooq.impl.AbstractRoutine<java.lang.Object> {

	private static final long serialVersionUID = -1578083574;


	/**
	 * The procedure parameter <code>public.cerca_dipendente.RETURN_VALUE</code>
	 * <p>
	 * The SQL type of this item (USER-DEFINED, dipendente) could not be mapped.<br/>
	 * Deserialising this field might not work!
	 */
	public static final org.jooq.Parameter<java.lang.Object> RETURN_VALUE = createParameter("RETURN_VALUE", org.jooq.util.postgres.PostgresDataType.getDefaultDataType("USER-DEFINED"));

	/**
	 * The procedure parameter <code>public.cerca_dipendente.nomecognome</code>
	 */
	public static final org.jooq.Parameter<java.lang.String> NOMECOGNOME = createParameter("nomecognome", org.jooq.impl.SQLDataType.VARCHAR);

	/**
	 * The procedure parameter <code>public.cerca_dipendente.lim</code>
	 */
	public static final org.jooq.Parameter<java.lang.Long> LIM = createParameter("lim", org.jooq.impl.SQLDataType.BIGINT);

	/**
	 * The procedure parameter <code>public.cerca_dipendente.offs</code>
	 */
	public static final org.jooq.Parameter<java.lang.Long> OFFS = createParameter("offs", org.jooq.impl.SQLDataType.BIGINT);

	/**
	 * Create a new routine call instance
	 */
	public CercaDipendenteDB() {
		super("cerca_dipendente", net.frapontillo.uni.db2.project.jooq.gen.PublicDB.PUBLIC, org.jooq.util.postgres.PostgresDataType.getDefaultDataType("USER-DEFINED"));

		setReturnParameter(RETURN_VALUE);
		addInParameter(NOMECOGNOME);
		addInParameter(LIM);
		addInParameter(OFFS);
	}

	/**
	 * Set the <code>nomecognome</code> parameter IN value to the routine
	 */
	public void setNomecognome(java.lang.String value) {
		setValue(net.frapontillo.uni.db2.project.jooq.gen.routines.CercaDipendenteDB.NOMECOGNOME, value);
	}

	/**
	 * Set the <code>nomecognome</code> parameter to the function
	 * <p>
	 * Use this method only, if the function is called as a {@link org.jooq.Field} in a {@link org.jooq.Select} statement!
	 */
	public void setNomecognome(org.jooq.Field<java.lang.String> field) {
		setField(NOMECOGNOME, field);
	}

	/**
	 * Set the <code>lim</code> parameter IN value to the routine
	 */
	public void setLim(java.lang.Long value) {
		setValue(net.frapontillo.uni.db2.project.jooq.gen.routines.CercaDipendenteDB.LIM, value);
	}

	/**
	 * Set the <code>lim</code> parameter to the function
	 * <p>
	 * Use this method only, if the function is called as a {@link org.jooq.Field} in a {@link org.jooq.Select} statement!
	 */
	public void setLim(org.jooq.Field<java.lang.Long> field) {
		setField(LIM, field);
	}

	/**
	 * Set the <code>offs</code> parameter IN value to the routine
	 */
	public void setOffs(java.lang.Long value) {
		setValue(net.frapontillo.uni.db2.project.jooq.gen.routines.CercaDipendenteDB.OFFS, value);
	}

	/**
	 * Set the <code>offs</code> parameter to the function
	 * <p>
	 * Use this method only, if the function is called as a {@link org.jooq.Field} in a {@link org.jooq.Select} statement!
	 */
	public void setOffs(org.jooq.Field<java.lang.Long> field) {
		setField(OFFS, field);
	}
}
